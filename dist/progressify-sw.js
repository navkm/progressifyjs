var progressify=function(){"use strict";class t{constructor(t=1,e=[],s=1,r=(new Date).getTime(),n="flush"){this.id=t;this.cache=e;this.version=s;this.timestamp=r;this.onUpgrade=n}getItemsToCache(){return this.cache}toString(){return JSON.stringify(this)}addPathToCache(t){this.cache.push({path:t})}static getDefaultConfig(){const e=new t;e.addPathToCache(".*");return e}static fromObject(e){return new t(e.id,e.cache,e.version,e.timestamp,e.onUpgrade)}}class e{constructor(t){this.config=t}route(t){if(t.request.method!="GET"){t.respondWith(fetch(t.request));return}let e=false;for(var s of this.config.getItemsToCache()){var r=t.request.url.match(s.path);if(r){e=true;break}}if(e){this.processCached(t)}else{this.processNotCached(t)}}processCached(t){t.respondWith(caches.match(t.request).then(function(e){if(e){return e}else{return fetch(t.request).then(function(e){return caches.open("progressify-cache").then(function(s){s.put(t.request.url,e.clone());return e})})}}))}processNotCached(t){t.respondWith(fetch(t.request))}}const s="progressify";const r="config";var n;const c={};c.sw={};c.sw.init=(()=>{self.addEventListener("install",function(c){var o=new Promise(function(c,o){const i=indexedDB.open(s);i.onsuccess=function(s){const o=s.target.result;const a=o.transaction([r],"readonly");const u=a.objectStore(r);let h=u.get(1);h.onsuccess=function(s){const r=s.target.result;n=new e(t.fromObject(r))};c(i.result)};i.onerror=(()=>o(i.error))});c.waitUntil(o)});self.addEventListener("activate",function(t){return self.clients.claim()});self.addEventListener("fetch",o)});function o(t){n.route(t)}return c}();