var progressify=function(){"use strict";class t{constructor(){this.id=1;this.cache=[];this.swPath="/sw.js"}toString(){return JSON.stringify(this)}addPathToCache(t){this.cache.push({path:t})}clearCachedPaths(){}static getDefaultConfig(){const e=new t;e.addPathToCache(".*");return e}static fromObject(e){const s=new t;s.id=e.id;s.cache=e.cache;return s}}const e="progressify-cache";class s{constructor(t){this.config=t}route(t){if(t.request.method!="GET"){t.respondWith(fetch(t.request));return}let e=false;for(var s of this.config.cache){var n=t.request.url.match(s.path);if(n){e=true;break}}if(e){this.processCached(t)}else{this.processNotCached(t)}}processCached(t){var s=this;t.respondWith(caches.match(t.request).then(function(n){if(n){s.revalidate(t);return n}else{return fetch(t.request).then(function(s){return caches.open(e).then(function(e){e.put(t.request.url,s.clone());return s})})}}))}processNotCached(t){t.respondWith(fetch(t.request))}revalidate(t){fetch(t.request).then(function(s){caches.open(e).then(function(e){e.put(t.request.url,s)})})}}const n="progressify";const r="config";var c;const o={};o.sw={};o.sw.init=(()=>{self.addEventListener("install",function(e){var o=new Promise(function(e,o){const i=indexedDB.open(n);i.onsuccess=function(n){const o=n.target.result;const a=o.transaction([r],"readonly");const h=a.objectStore(r);let u=h.get(1);u.onsuccess=function(e){const n=e.target.result;c=new s(t.fromObject(n))};e(i.result)};i.onerror=(()=>o(i.error))});e.waitUntil(o)});self.addEventListener("activate",function(t){return self.clients.claim()});self.addEventListener("fetch",i)});function i(t){c.route(t)}return o}();