var progressify=function(){"use strict";class e{constructor(e=1,t=[],s=1,r=(new Date).getTime(),n="flush"){this.id=e;this.cache=t;this.version=s;this.timestamp=r;this.onUpgrade=n}getItemsToCache(){return this.cache}toString(){return JSON.stringify(this)}addPathToCache(e){this.cache.push({path:e})}static getDefaultConfig(){const t=new e;t.addPathToCache(".*");return t}static fromObject(t){return new e(t.id,t.cache,t.version,t.timestamp,t.onUpgrade)}}class t{constructor(e){this.config=e}route(e){if(e.request.method!="GET"){e.respondWith(fetch(e.request));return}let t=false;for(var s of this.config.getItemsToCache()){var r=e.request.url.match(s.path);if(r){t=true;break}}if(t){this.processCached(e)}else{this.processNotCached(e)}}processCached(e){e.respondWith(caches.match(e.request).then(function(t){if(t){return t}else{return fetch(e.request).then(function(t){return caches.open("progressify-cache").then(function(s){s.put(e.request.url,t.clone());return t})})}}))}processNotCached(e){e.respondWith(fetch(e.request))}}const s="progressify";const r="config";var n;const c={};c.sw={};c.sw.init=(()=>{self.addEventListener("install",function(c){var o=new Promise(function(c,o){const i=indexedDB.open(s);i.onsuccess=function(s){const o=s.target.result;const a=o.transaction([r],"readonly");const h=a.objectStore(r);let u=h.get(1);u.onsuccess=function(s){const r=s.target.result;n=new t(e.fromObject(r))};c(i.result)};i.onerror=(()=>o(i.error))});c.waitUntil(o)});self.addEventListener("activate",function(e){return self.clients.claim()});self.addEventListener("fetch",o)});function o(e){n.route(e)}return c}();